services:
  simulator:
    image: ghcr.io/dittonetwork/simulator:0.0.1
    networks:
      - ditto_network
    depends_on:
      - mongo
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongo:27017/?replicaSet=rs0
      - DB_NAME=indexer
      - MAX_WORKERS=1
      - RUNNER_NODE_SLEEP=60
      - FULL_NODE=false
      - MAX_MISSING_NEXT_SIM_LIMIT=100
      - MAX_BLOCK_RANGE_11155111=10000
      - MAX_BLOCK_RANGE_1=2000
      - IPFS_SERVICE_URL=https://ipfs-service.dittonetwork.io
      - IS_PROD=true
      - LOG_LEVEL=info
      - LOG_PRETTY=true 
      - EXECUTOR_ADDRESS=0xF177179963aA0EDE80Be4396d04d970171CF6a36

  indexer:
    image: ghcr.io/dittonetwork/indexer:0.0.1
    networks:
      - ditto_network
    depends_on:
      - mongo
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongo:27017/?replicaSet=rs0
      - DB_NAME=indexer
      - META_FILLER_SLEEP=2
      - IPFS_CONNECTOR_ENDPOINT=https://ipfs-service.dittonetwork.io/ipfs/read
      - ENV=prod

  mongo:
    image: mongo:8.0.13
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - ditto_network
    volumes:
      - mongo-data:/data/db

  mongo-init:
    image: mongo:8.0.13
    restart: "no"
    depends_on:
      - mongo
    command: >
      bash -c "sleep 5 && mongosh --host mongo --port 27017 --eval 'rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"mongo:27017\"}]})'"
    networks:
      - ditto_network

networks:
  ditto_network:
    driver: bridge

volumes:
  mongo-data: 
